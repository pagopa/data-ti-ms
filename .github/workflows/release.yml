name: Release

on:
  workflow_dispatch: 
    inputs:
      version-bump:
        type: choice
        description: Version bump
        default: minor
        options: 
          - patch
          - minor
          - major

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-22.04
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
      actions: write
      packages: write
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 #v4.1.1
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Install Node.js
        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1

      - name: Install semver
        run: npm install -g semver

      - name: Get Latest Release Version
        id: get-version
        run: |
          RELEASE_VERSION=$(gh release list -L 1 --json tagName --jq '.[0].tagName')
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_ENV
  
      - name: Set Branch Name
        id: set_branch
        run: |

          if [ -z "${RELEASE_VERSION}" ]; then
            NEW_VERSION_NAME="0.0.1"
          else
            OLD_VERSION=$(echo "${RELEASE_VERSION}")
            
            NEW_VERSION=$(semver --increment ${{ inputs.version-bump }} "${OLD_VERSION}")
            echo "Bumping $OLD_VERSION to $NEW_VERSION"
          fi

          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV
          echo "OLD_VERSION=${OLD_VERSION}" >> $GITHUB_ENV

      - name: Create Repository Release
        run: |
          gh release create ${{ env.NEW_VERSION }} \
            --title ${{ env.NEW_VERSION }} \
            --generate-notes \
            --notes-start-tag ${{ env.OLD_VERSION }}

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Log in to the Container registry
        id: docker_login
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ env.GITHUB_TOKEN }}

      - name: Docker meta
        uses: docker/metadata-action@dbef88086f6cef02e264edb7dbf63250c17cef6c # v5.5.0
        id: meta
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ env.NEW_VERSION }}
          labels:
            org.opencontainers.image.title=${{ env.IMAGE_NAME }}
            org.opencontainers.image.description=GitHub self hosted runner
            org.opencontainers.image.authors=PagoPA
            org.opencontainers.image.url=github.com/PagoPA/${{ github.repository }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}

      - name: Build and push Docker image
        id: docker_build_push
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # v5.1.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=min
          platforms: linux/amd64,linux/arm64